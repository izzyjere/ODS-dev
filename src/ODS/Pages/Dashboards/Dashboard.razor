@page "/dashboard"
<AuthorizeView Roles="Orphanage">
    <Authorized>
        <MudMessageBox @ref="mbox" Title="Warning">
            <MessageContent>
                Your application is still in progress. Please contact the admin for more details.
            </MessageContent>
            <YesButton>
                <MudButton Variant="Variant.Filled" Color="Color.Success">OK</MudButton>
            </YesButton>
        </MudMessageBox>
        <MudGrid>
            <MudItem xs="12" sm="6" md="4">
                <MudPaper Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
                    <MudIcon Icon="@Icons.Material.Filled.Money" Color="Color.Primary" Class="mx-4"
                             Style="width:54px; height:54px;"></MudIcon>
                    <div>
                        <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Total Donations</MudText>
                        <MudText Typo="Typo.h5">@Orphanage.Payments?.Sum(d=>d.Amount).ToString("N2") ZMW</MudText>
                    </div>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6" md="4">
                <MudPaper Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
                    <MudIcon Icon="@Icons.Material.Filled.ShoppingCart" Color="Color.Secondary" Class="mx-4"
                             Style="width:54px; height:54px;"></MudIcon>
                    <div>
                        <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Items Donated</MudText>
                        <MudText Typo="Typo.h5">@Orphanage.Donations?.Sum(d=>d.Quantity)</MudText>
                    </div>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6" md="4">
                <MudPaper Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
                    <MudIcon Icon="@Icons.Material.Filled.Home" Color="Color.Success" Class="mx-4"
                             Style="width:54px; height:54px;"></MudIcon>
                    <div>
                        <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Needs</MudText>
                        <MudText Typo="Typo.h5">@Orphanage.OrphanageNeeds?.Where(n=>n.Type==DonationType.Item).Sum(d=>d.Target) Items</MudText>
                    </div>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudPaper Height="500px" Class="pa-4" Elevation="24">
                    <center><MudText Typo="Typo.h6">Monthy Donations</MudText></center>
                    <div>
                        <MudChart ChartType="MudBlazor.ChartType.Bar" ChartSeries="@MonthlyDonations" @bind-SelectedIndex="Index3" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>
                    </div>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudPaper Height="500px" Elevation="24">
                     <center ><MudText Class="mt-4"Typo="Typo.h6">Disagregated by Type</MudText></center>
                    <MudChart Class="mt-4" ChartType="MudBlazor.ChartType.Pie" InputData="@(data2.ToArray())" @bind-SelectedIndex="Index" InputLabels="@Types" Width="300px" Height="300px" />
                </MudPaper>
            </MudItem>
        </MudGrid>
    </Authorized>
</AuthorizeView>
<AuthorizeView Roles="Donor">
    <Authorized>
        <MudGrid>
            <MudItem xs="12" sm="6" md="4">
                <MudPaper Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
                    <MudIcon Icon="@Icons.Material.Filled.Money" Color="Color.Primary" Class="mx-4"
                             Style="width:54px; height:54px;"></MudIcon>
                    <div>
                        <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Total Donations</MudText>
                        <MudText Typo="Typo.h5">@myDonations.ToString("N2") ZMW</MudText>
                    </div>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6" md="4">
                <MudPaper Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
                    <MudIcon Icon="@Icons.Material.Filled.Handshake" Color="Color.Secondary" Class="mx-4"
                             Style="width:54px; height:54px;"></MudIcon>
                    <div>
                        <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Items Donated</MudText>
                        <MudText Typo="Typo.h5">@itemsTotal</MudText>
                    </div>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6" md="4">
                <MudPaper Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
                    <MudIcon Icon="@Icons.Material.Filled.Home" Color="Color.Success" Class="mx-4"
                             Style="width:54px; height:54px;"></MudIcon>
                    <div>
                        <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Opharnages Helped</MudText>
                        <MudText Typo="Typo.h5">@homesTotal</MudText>
                    </div>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudPaper Height="500px" Class="pa-4" Elevation="24">
                    <center><MudText Typo="Typo.h6">Monthy Donations</MudText></center>
                    <div>
                        <MudChart ChartType="MudBlazor.ChartType.Bar" ChartSeries="@MonthlyDonations" @bind-SelectedIndex="Index3" XAxisLabels="@XAxisLabels" Width="100%" Height="350px"></MudChart>
                    </div>
                </MudPaper>
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudPaper Height="500px" Elevation="24">
                     <center ><MudText Class="mt-4"Typo="Typo.h6">Disagregated by Type</MudText></center>
                    <MudChart Class="mt-4" ChartType="MudBlazor.ChartType.Pie" InputData="@data.ToArray()" @bind-SelectedIndex="Index" InputLabels="@Types" Width="300px" Height="300px" />
                </MudPaper>
            </MudItem>
        </MudGrid>
    </Authorized>
</AuthorizeView>
@code {
    Orphanage Orphanage { get; set; } = new();
    Donor Donor { get; set; } = new();
    [CascadingParameter] Task<AuthenticationState> authState { get; set; }
    ClaimsPrincipal claimsPrincipal = new();
    MudMessageBox mbox { get; set; }
    decimal myDonations = 0;
    int itemsTotal, homesTotal = 0;
    protected override async Task OnInitializedAsync()
    {
        await Init();
    }
    public List<ChartSeries> MonthlyDonations = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "Orphanage 1", Data = new double[] { 40, 20, 25, 27, 46, 60, 48 } },
        new ChartSeries() { Name = "Orphanage 2", Data = new double[] { 19, 24, 35, 13, 28, 15, 13 } },
        new ChartSeries() { Name = "Orphanage 3", Data = new double[] { 8, 6, 11, 13, 4, 16, 10, 16} },
        new ChartSeries() { Name = "Orphanage 4", Data = new double[] { 20, 15, 2, 6, 10, 50, 19} },
    };
    public string[] XAxisLabels = { "June", "July", "August", "September", "October", "November", "December" };
    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.
    int dataSize = 4;
    List<double> data = new();
    List<double> data2 = new();
    string[] Types = { "Items", "Money"};
    private int Index3 = -1;
    async Task Init()
    {
        claimsPrincipal = (await authState).User;
        if (claimsPrincipal.Identity.IsAuthenticated)
        {
            if (claimsPrincipal.IsInRole("Orphanage"))
            {   
                Orphanage = await orphanageService.GetByEmail(claimsPrincipal.Identity.Name);
                data2.Add((double)Orphanage.Donations?.Sum(d => d.Quantity));
                data2.Add((double)Orphanage.Payments?.Sum(d => d.Amount));
                if (!Orphanage.IsActive)
                {
                    await mbox.Show();
                    Navigation.NavigateTo("/");

                }
            }
            else if (claimsPrincipal.IsInRole("Donor"))
            {
                Donor = await donorService.GetByUserId(claimsPrincipal.GetGuid());
                if (Donor.Donations.Any())
                {
                    itemsTotal = Donor.Donations.Count;
                    myDonations = Donor.Payments.Sum(d => d.Amount);
                    data.Add((double)itemsTotal);data.Add((double)myDonations);
            }
            }
            else
            {
                Navigation.NavigateTo("/");
            }
        }
        else
        {
            Navigation.NavigateTo("login");
        }
    }
}